@startuml

package com.rickensteven.sirkwie.gui {
    !include dkd-gui-view.puml

    package javafx #ffcc00 {
        class Application <<javafx.application>>
        class FileChooser <<javafx.stage>>
    }

    class Main {
        +{static}main(args: String[])
    }
    note top of Main
        Thanks to a "feature" of JavaFX, you cannot
        create a fat jar if your entry class
        extends the JavaFX Application class
    end note
    Main -- FXMain

    class FXMain extends Application {
        -{static}SCENE_WIDTH: int
        -{static}SCENE_HEIGHT: int

        +{static}main(args: String[])
        +start(stage: Stage)
        +stop()
    }
    FXMain -- ViewModel
    FXMain -- Controller
    FXMain -- MainView

    class Controller {
        +Controller(viewModel: ViewModel)
        +loadFileButtonClicked(ownerWindow: Window)
        +simulateButtonClicked()
        +quit(mouseEvent: MouseEvent)
        +tryToLoadFile(filePath: String)
        +inputButtonClicked(nodeName: String)
        +addListener(simulationListener: ISimulationListener)
        +setCircuitParser(name: String)
        -simulate(circuit: Circuit)
        -alert(message: String)
    }
    Controller --> "1" ViewModel : -viewModel
    Controller --> "1" FileChooser : -fileChooser
    Controller --> "1" CircuitLoaderFacade : -circuitLoaderFacade
    Controller --> "1" CircuitParserFactory : -circuitParserFactory

    class ViewModel {
        +circuitProperty: Property<Circuit>
        +circuitSimulateStartTriggerProperty: BooleanProperty
        +circuitSimulatedTriggerProperty: BooleanProperty
        -parserNames: Set<String>
        +setParserNames(parserNames: Set<String>)
        +getParserNames(): Set<String>
    }
    ViewModel --> "1" PropagationDelayCalculator : +propagationDelayCalculator
    note bottom of ViewModel
        Property class comes from JavaFX
    end note

    class ImageLoader <<Singleton>> {
        -{static}IMAGES_BASEPATH: String
        -{static}instance: ImageLoader

        +{static}getInstance(): ImageLoader
        +load(name: String): Image
        +loadView(name: String): ImageView
    }
}

@enduml