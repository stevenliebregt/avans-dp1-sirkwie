@startuml

' Nodes
abstract class Node {
    -value: boolean
    +getValue(): boolean
    +{abstract} calculate(): boolean
}
Node --> "0..*" Node : previous >

abstract class NodeComposite {
    +add(Node: child): void
    +remove(Node: child): void
    +getChildren(): List<Node>
}
NodeComposite --> "0..*" Node : children >

' Inputs
class InputNode {
}
NodeComposite <|-- InputNode

class ProbeNode {
}
Node <|-- ProbeNode

' Ports
abstract class Port {
}
NodeComposite <|-- Port

class AndPort {
}
Port <|-- AndPort

class NAndPort {
}
AndPort <|-- NAndPort

class OrPort {
}
Port <|-- OrPort

class NorPort {
}
OrPort <|-- NorPort

class NotPort {
}
Port <|-- NotPort

class XorPort {
}
Port <|-- XorPort

' Circuit
class Circuit {
    +simulate(): void
    +addProbe(Node node): Circuit
    +addInput(Node node): Circuit
    +addNode(Node node): Circuit
    +getProbes(): Set<Node>
    +getInputs(): Set<Node>
    +getNodes(): Set<Node>
}
InputNode "1..*" <--* Circuit : inputs <
ProbeNode "1..*" <--* Circuit : probes <
Node "1..*" <--* Circuit : nodes <

' CircuitBuilder
class CircuitBuilder {
    +{abstract} buildNodes(...): void
    +{abstract} buildEdges(...): void
    +reset(String cleanedTxtCircuit): void
    +getCircuit(): Circuit
}

class ANTLRCircuitBuilder {
}
CircuitBuilder <|-- ANTLRCircuitBuilder

' NodeFactory
class NodeFactory {
}

' CircuitParser
class ANTLRCircuitParser {
}

' CircuitFileReader
class CircuitFileReader {
}

' Main
class Main {

}

@enduml
